@model RoundRobin.Models.Home.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class="form-horizontal" }))
{
    <div class="control-group">
        @Html.LabelFor(m => m.Forename, new { @class="control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Forename)
            @Html.ValidationMessageFor(m  => m.Forename, null, new { @class="help-inline" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Surname, new { @class="control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Surname)
            @Html.ValidationMessageFor(m  => m.Surname, null, new { @class="help-inline" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Email, new { @class="control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Email)
            @Html.ValidationMessageFor(m  => m.Email, null, new { @class="help-inline" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Password, new { @class="control-label" })
        <div class="controls">
            @Html.PasswordFor(m => m.Password)
            @Html.ValidationMessageFor(m  => m.Password, null, new { @class="help-inline" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.ConfirmPasword, new { @class="control-label" })
        <div class="controls">
            @Html.PasswordFor(m => m.ConfirmPasword)
            @Html.ValidationMessageFor(m  => m.ConfirmPasword, null, new { @class="help-inline" })
        </div>
    </div>
    
    <div class="form-actions">
      <button type="submit" class="btn btn-primary">Save changes</button>
      <button type="button" class="btn">Cancel</button>
    </div>
}
